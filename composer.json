{
    "name": "holidaypirates/pirate-skeleton-application",
    "description": "Pirate Skeleton Application",
    "type": "project",
    "config": {
        "sort-packages": true
    },
    "extra": {
        "zf": {
            "component-whitelist": [
                "zendframework/zend-expressive",
                "zendframework/zend-expressive-helpers",
                "zendframework/zend-expressive-router",
                "zendframework/zend-httphandlerrunner",
                "zendframework/zend-expressive-fastroute"
            ]
        }
    },
    "require": {
        "php": "^7.3",
        "ext-json": "*",
        "ext-pdo": "*",
        "elie29/zend-phpdi-config": "^3.0",
        "guzzlehttp/psr7": "^1.6",
        "mead-steve/mono-snag": "^4",
        "middlewares/access-log": "^1.1",
        "middlewares/cache": "^1.1",
        "paddlehq/openapi-validator": "^1.0",
        "predis/predis": "^1.1",
        "psr/simple-cache": "^1.0",
        "symfony/cache": "^5.1.5",
        "symfony/yaml": "^4.2",
        "tuupola/cors-middleware": "^1.1.1",
        "vlucas/phpdotenv": "^2.5",
        "zendframework/zend-component-installer": "^2.1.1",
        "zendframework/zend-config-aggregator": "^1.0",
        "zendframework/zend-diactoros": "^1.7.1 || ^2.0",
        "zendframework/zend-expressive": "^3.0.1",
        "zendframework/zend-expressive-fastroute": "^3.0",
        "zendframework/zend-expressive-helpers": "^5.0",
        "zendframework/zend-stdlib": "^3.1"
    },
    "require-dev": {
        "squizlabs/php_codesniffer": "^3.4",
        "filp/whoops": "^2.1.12",
        "phpstan/phpstan": "^0",
        "phpunit/phpunit": "^8.0",
        "roave/security-advisories": "dev-master",
        "zendframework/zend-expressive-tooling": "^1.0",
        "zfcampus/zf-development-mode": "^3.1"
    },
    "autoload": {
        "psr-4": {
            "PirateApplication\\": "src/PirateApplication/"
        },
        "files": [
            "src/Helpers/functions.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "PirateApplicationUnitTest\\": "test/PirateApplicationUnitTest/",
            "PirateApplicationIntegrationTest\\": "test/PirateApplicationIntegrationTest/"
        }
    },
    "scripts": {
        "post-install-cmd": "@install-githooks",
        "post-update-cmd": "@install-githooks",
        "post-create-project-cmd": "@development-enable",
        "development-disable": "zf-development-mode disable",
        "development-enable": "zf-development-mode enable",
        "development-status": "zf-development-mode status",
        "expressive": "expressive --ansi",
        "commander": "docker-compose run php php /code/bin/commander.php",
        "check": [
            "@cs-check",
            "@analyze",
            "@test"
        ],
        "analyze": "docker-compose run php vendor/bin/phpstan analyze -l 6 ./src ./config",
        "clear-config-cache": "php bin/clear-config-cache.php",
        "cs-check": "docker-compose run php vendor/bin/phpcs",
        "cs-fix": "docker-compose run php vendor/bin/phpcbf",
        "test": "docker-compose run php vendor/bin/phpunit --colors=always",
        "coverage-html": "rm -rf ./coverage && docker-compose run php vendor/bin/phpunit --strict-coverage --coverage-html ./coverage && open ./coverage/index.html",
        "up": "docker-compose up -d",
        "restart": "docker-compose restart",
        "stop":"docker-compose stop",
        "ps": "docker-compose ps",
        "update-docs" : "docker run --rm -v ${PWD}:/local openapitools/openapi-generator-cli generate -i /local/docs/API/V1/schema.json -g html2 -o /local/public/docs",
        "install-githooks": [
            "#Installing git-hooks",
            "cp build/git-hook-scripts/pre-commit .git/hooks/pre-commit",
            "chmod +x .git/hooks/pre-commit"
        ]
    }
}
